{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import {\n    Button,\n    Container,\n    Jumbotron,\n    Row,\n    Card,\n    CardBody,\n    CardFooter,\n    Col,\n    Input,\n    InputGroup,\n    Badge\n  } from \"sveltestrap\";\n\n  import { onMount } from \"svelte\";\n\n  let products = [];\n\n  let title = \"\";\n  const server = \"http://api.spacedevs.info/api/v1\";\n\n  onMount(async () => {\n    const response = await (await fetch(`${server}/products`)).json();\n    products = response.products;\n  });\n\n  async function addProduct(ev) {\n    ev.preventDefault();\n    const response = await (await fetch(`${server}/products`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ title })\n    })).json();\n    products = [...products, response.product];\n    title = \"\";\n  }\n\n  async function stock(p) {\n    const response = await (await fetch(`${server}/products`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ id: p.id, status: p.status })\n    })).json();\n    products[products.indexOf(p)] = response.product;\n  }\n</script>\n\n<style>\n  .cardDisabled {\n    opacity: 0.6;\n  }\n</style>\n\n<Container class=\"mt-5\">\n  <h4 class=\"text-center text-muted\">Controle de Estoque</h4>\n</Container>\n\n<Jumbotron>\n  <Container>\n    <Row>\n      <Col sm=\"12\" class=\"mb-3\">\n        <h5 class=\"text-muted\">\n          Em estoque\n          <Badge color=\"primary\">\n            {products.filter(p => (p.status ? p : 0)).length}\n          </Badge>\n        </h5>\n      </Col>\n      {#each products as product}\n        <Col sm=\"12\" lg=\"4\" class=\"mb-3\">\n          <card\n            class=\"card h-100 {product.status == false ? 'cardDisabled' : ''}\">\n            <CardBody>{product.title}</CardBody>\n            <CardFooter class=\"text-right\">\n              <Button\n                color=\"success\"\n                disabled={product.status}\n                on:click={() => stock(product)}>\n                <i class=\"fas fa-sync\" />\n              </Button>\n              <Button\n                color=\"info\"\n                disabled={!product.status}\n                on:click={() => stock(product)}>\n                <i class=\"fas fa-folder-open\" />\n              </Button>\n            </CardFooter>\n          </card>\n        </Col>\n      {/each}\n    </Row>\n  </Container>\n</Jumbotron>\n\n<Container>\n  <form>\n    <InputGroup>\n      <Col>\n        <Input placeholder=\"Insert a title\" bind:value={title} autofocus />\n      </Col>\n    </InputGroup>\n    <InputGroup class=\"text-right mt-3\">\n      <Col>\n        <Button disabled={!title} color=\"success\" on:click={addProduct}>\n          Adicionar\n        </Button>\n      </Col>\n    </InputGroup>\n  </form>\n</Container>\n"
  ],
  "names": [],
  "mappings": "AAiDE,aAAa,cAAC,CAAC,AACb,OAAO,CAAE,GAAG,AACd,CAAC"
}